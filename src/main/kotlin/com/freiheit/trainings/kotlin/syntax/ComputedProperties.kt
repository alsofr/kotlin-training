package com.freiheit.trainings.kotlin.syntax

import com.fasterxml.jackson.annotation.JsonIgnore
import kotlin.random.Random

/**
 * Computed properties are basically custom setters and getters
 *
 * @DO Use computed getters, if the property is semantically an attribute of the object
 * @DO Use computed setters, if you need input validation
 * @DO Use computed properties to add annotations
 *
 * @DONT Use computed properties, if no actual computation is done.
 *       Basic setters and getters are generated by default
 * @DONT Use a val with non deterministic behaviour.
 */
class Point(var x: Int, var y: Int) {
    var position
        get() = x to y
        set(value) {
            x = value.first
            y = value.second
        }

    var someBinaryValue: Int = 0
        set(value) {
            if (isBinary(value)) field = value
        }

    val stringRepresentation
        @JsonIgnore get() = "($x, $y)"

    // Misleading immutability by [val]
    val predictedPosition get() = Random.nextInt() to Random.nextInt()

    private fun isBinary(value: Int) = value in setOf(0, 1)
}